#pragma once

#include <windows.h>
#include <winternl.h>
#include <stdint.h>

#pragma comment(lib, "ntdll.lib")

typedef NTSTATUS(NTAPI* NtUnmapViewOfSection_t)(HANDLE, PVOID);
typedef NTSTATUS(NTAPI* NtAllocateVirtualMemory_t)(
	HANDLE, PVOID*, ULONG_PTR, PSIZE_T, ULONG, ULONG);
typedef NTSTATUS(NTAPI* NtWriteVirtualMemory_t)(
   	HANDLE, PVOID, PVOID, ULONG, PULONG);

NtUnmapViewOfSection_t NtUnmapViewOfSection;
NtAllocateVirtualMemory_t NtAllocateVirtualMemory;
NtWriteVirtualMemory_t NtWriteVirtualMemory;

void resolve_syscalls() {
    	HMODULE ntdll = GetModuleHandleW(L"ntdll.dll");

    	NtUnmapViewOfSection = (NtUnmapViewOfSection_t)GetProcAddress(ntdll, "NtUnmapViewOfSection");
    	NtAllocateVirtualMemory = (NtAllocateVirtualMemory_t)GetProcAddress(ntdll, "NtAllocateVirtualMemory");
    	NtWriteVirtualMemory = (NtWriteVirtualMemory_t)GetProcAddress(ntdll, "NtWriteVirtualMemory");
}

